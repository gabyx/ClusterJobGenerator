# Default Job configuration file for a simple executable
# which prints the configured input files

# WARNING: This is a .ini file, multiline arguments should work but do not used it!

# Section and option names may contain the following characters [_a-zA-Z-], e.g ${Sec1-Sub1:Opt_1-32}

# Environment variables are prepended with 'ENV::'

# The configure.py script defines additional variable:
#   General:configuratorModulePath  : This is the path to the directory which contains the Job Configurator module (that is the folder HPCJobConfigurator)
#   General:configuratorModuleDir   : This is the path to the module directory of the Job Configurator (where all standart templates can be found, for certain generators)
#   General:currentWorkDir          : The directory where the submit.py has been executed (mainly submit.py is executed in the Job folder)
#   General:jobDir                  : The directory in which this Job .ini file is located
#
# All these options in section (Job and Template) are strictly needed by GeneratorMPI which inherits from Generator
# GeneratorMPI provides these additional parameters which can be referenced in all sections:
#   Job:jobIdx :   The index of the currently generated job


[Job]

jobName              = ${Cluster:jobName}.${Job:jobIdx}

globalDir            = ENV::MYGLOBALSCRATCH_DIR/${Job:jobName}
localDir             = ENV::MYLOCALSCRATCH_DIR/${Job:jobName}


scriptDir            = ${Cluster:jobGeneratorOutputDir}/Launch_${Job:jobName}

jobIdx               = will_be_generated


# All these files listed under this section [Templates] are first replaced with the variables defined here and by the generator
# and the output is written to the jobs script directory folder by default.
# To each template defined here two additional options are generated if they do not yet exist!
# TempaltesOut:myTemplate  : The output path of the template ${Templates:myTemplate}
#                            The default path is the the job script directory
#                            ${Job:scriptDir}/basename(${Templates:myTemplate})

[Templates]

## with string replacement:
#main                 = "${General:jobDir}/scripts/main.sh"
# or the same with:
main                 = { "inputFile" : "${General:jobDir}/scripts/main.sh" , "configurator" : { "modulePath" : "${General:configuratorModuleDir}/jobGenerators/dictionaryAdjuster.py" , "moduleName" : "dictionaryAdjuster" , "className" : "DictionaryAdjuster" }, "settings" : {} }

# only copy!
#main                 = { "inputFile" : "${General:jobDir}/scripts/main.sh" , "configurator" : { "modulePath" : "${General:jobDir}/templates/copyAdjuster.py" , "moduleName" : "copyAdjuster" , "className" : "CopyAdjuster" }, "settings" : {} }


submitJob            = { "inputFile" : "" , "configurator" : { "modulePath" : "${General:jobDir}/templates/submitFileGenerator.py" , "moduleName" : "submitFileGenerator" , "className" : "SubmitFileGenerator" }, "settings" : {} }

[TemplatesOut]
main                 = ${Job:scriptDir}/main.sh
submitJob            = ${Job:scriptDir}/submit.sh


[Settings]

dataFolder           = ENV::MYGLOBALSCRATCH_DIR/MyExperimentalData

startIdx             = 0
endIdx               = 100
fileTemplate         = "${Settings:dataFolder}/exp_$${jobNr}.h5"
    
submitFormatString   =  bsub -W ${Cluster:runTime} -J "${Job:jobName}-$${jobNr}" -n ${Cluster:nProcesses} -R rusage[scratch=${Cluster:localScratchPerCore},mem=${Cluster:ramPerCore}] -oo "${Job:scriptDir}/lsf${Job:jobName}-$${jobNr}" < ${General:jobDir}/scripts/main.sh $${jobNr} ${Settings:fileTemplate} ${Job:localDir} ${Job:globalDir}